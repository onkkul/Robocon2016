int S0 = 8;//pinB
int S1 = 9;//pinA
int S2 = 12;//pinE
int S3 = 11;//pinF
int taosOutPin = 10;//pinC
int LED = 13;//pinD

void setup() {
TCS3200setup();
Serial.begin(115200);
Serial.print("\n\n\nready\n\n\n");
delay(100);
}

// primary loop takes color readings from all four channels and displays the raw values once per second.  What you might wish to do with those values is up to you...
void loop() {

detectColor(taosOutPin);
Serial.print("\n\n\n");
delay(1000);

}

int detectColor(int taosOutPin){

float white = colorRead(taosOutPin,0,1);
float red = colorRead(taosOutPin,1,1);
float blue = colorRead(taosOutPin,2,1);
float green = colorRead(taosOutPin,3,1);

Serial.print("white ");
Serial.println(white);

Serial.print("red ");
Serial.println(red);

Serial.print("blue ");
Serial.println(blue);

Serial.print("green ");
Serial.println(green);

}

/*
This section will return the pulseIn reading of the selected color.  
It will turn on the sensor at the start taosMode(1), and it will power off the sensor at the end taosMode(0)
color codes: 0=white, 1=red, 2=blue, 3=green
if LEDstate is 0, LED will be off. 1 and the LED will be on.
taosOutPin is the ouput pin of the TCS3200.
*/

float colorRead(int taosOutPin, int color, boolean LEDstate){ 
  
//turn on sensor and use highest frequency/sensitivity setting
taosMode(1);

//setting for a delay to let the sensor sit for a moment before taking a reading.
int sensorDelay = 100;

//set the S2 and S3 pins to select the color to be sensed 
if(color == 0){//white
digitalWrite(S3, LOW); //S3
digitalWrite(S2, HIGH); //S2
// Serial.print(" w");
}

else if(color == 1){//red
digitalWrite(S3, LOW); //S3
digitalWrite(S2, LOW); //S2
// Serial.print(" r");
}

else if(color == 2){//blue
digitalWrite(S3, HIGH); //S3
digitalWrite(S2, LOW); //S2 
// Serial.print(" b");
}

else if(color == 3){//green
digitalWrite(S3, HIGH); //S3
digitalWrite(S2, HIGH); //S2 
// Serial.print(" g");
}

// create a var where the pulse reading from sensor will go
float readPulse;

//  turn LEDs on or off, as directed by the LEDstate var
if(LEDstate == 0){
    digitalWrite(LED, LOW);
}
if(LEDstate == 1){
    digitalWrite(LED, HIGH);
}

// wait a bit for LEDs to actually turn on, as directed by sensorDelay var
delay(sensorDelay);

// now take a measurement from the sensor, timing a low pulse on the sensor's "out" pin
readPulse = pulseIn(taosOutPin, LOW, 80000);

//if the pulseIn times out, it returns 0 and that throws off numbers. just cap it at 80k if it happens
if(readPulse < .1){
readPulse = 80000;
}

//turn off color sensor and LEDs to save power 
taosMode(0);

// return the pulse value back to whatever called for it... 
return readPulse;

}

// Operation modes area, controlled by hi/lo settings on S0 and S1 pins.
//setting mode to zero will put taos into low power mode. taosMode(0);

void taosMode(int mode){
    
    if(mode == 0){
    //power OFF mode-  LED off and both channels "low"
    digitalWrite(LED, LOW);
    digitalWrite(S0, LOW); //S0
    digitalWrite(S1, LOW); //S1
    //  Serial.println("mOFFm");
    
    }else if(mode == 1){
    //this will put in 1:1, highest sensitivity
    digitalWrite(S0, HIGH); //S0
    digitalWrite(S1, HIGH); //S1
    // Serial.println("m1:1m");
    
    }else if(mode == 2){
    //this will put in 1:5
    digitalWrite(S0, HIGH); //S0
    digitalWrite(S1, LOW); //S1
    //Serial.println("m1:5m");
    
    }else if(mode == 3){
    //this will put in 1:50
    digitalWrite(S0, LOW); //S0
    digitalWrite(S1, HIGH); //S1 
    //Serial.println("m1:50m");
    }
    
    return;

}

void TCS3200setup(){

    //initialize pins
    pinMode(LED,OUTPUT); //LED pinD
    
    //color mode selection
    pinMode(S2,OUTPUT); //S2 pinE
    pinMode(S3,OUTPUT); //s3 pinF
    
    //color response pin (only actual input from taos)
    pinMode(taosOutPin, INPUT); //taosOutPin pinC
    
    //communication freq (sensitivity) selection
    pinMode(S0,OUTPUT); //S0 pinB
    pinMode(S1,OUTPUT); //S1 pinA 
    
    return;

}



























































1 /*
2 reibot.org
3
4 Demo program for TCS3200 from parallax and the parallax daughterboard
5
6 Call detectColor(out) where 'out' is pinC on the daughterboard. The detectColor will return a 0 if there is nothing color in front of sensor,
7 1 if red is in front, 2 if blue is in front, or 3 if blue is in front. You can comment out all the serial.print.
8
9 If you're tight on pins, remove the taosMode(int) method and all references to it. Remove pins from the TCS3200setup too.
10 If these wires are disconnected the TCS3200 will run on the highest frequency due to internal pullup resistors on S0 and S1
11
12 If you have multiple TCS3200 you may tie all the pins together except the outputs (pinC). Then just use detectColor(TCS3200's output) to
13 detect color on the selected TCS3200's output pin.
14
15 7/6/2011 works on arduino 0022
16
17 Taos pins connect to arduino pins 8-13. There is no order and should work on any digital i/o
18 */
19 int S0 = 8;//pinB
20 int S1 = 9;//pinA
21 int S2 = 12;//pinE
22 int S3 = 11;//pinF
23 int out = 10;//pinC
24 int LED = 13;//pinD
25
26
27 void setup() {
28
29 TCS3200setup();
30
31 Serial.begin(115200);
32 Serial.print("\n\n\nready\n\n\n");
33 delay(100);
34 }
35
36
37 void loop() {
38
39 Serial.print(detectColor(out));
40
41 Serial.print("\n\n\n");
42
43 delay(1000);
44 }
45
46
47 int detectColor(int taosOutPin){
48
49 //isPresentTolerance will need to be something small if used in high light environment, large if used in dark environment.
50 //the color detection will work either way, but the larger isPresentTolerance is, the closer the object will need to be in front of sensor
51
52 double isPresentTolerance = 5;
53 double isPresent = colorRead(taosOutPin,0,0)/colorRead(taosOutPin,0,1);//number gets large when something is in front of sensor.
54
55 Serial.print("isPresent:");
56 Serial.println(isPresent,2);
57 Serial.print("isPresentTolerance currently set to:");
58 Serial.println(isPresentTolerance,2);
59
60
61 if(isPresent < isPresentTolerance){
62 Serial.println("nothing is in front of sensor");
63 return 0;
64 }
65
66
67 double red,blue,green;
68 double white = colorRead(taosOutPin,0,1);
69
70 red = white/colorRead(ta osOutPin,1,1);
71 blue = white/colorRead(taosOutPin,2,1);
72 green = white/colorRead(taosOutPin,3,1);
73
74 Serial.print("red");
75 Serial.println(red);
76
77 Serial.print("blue");
78 Serial.println(blue);
79
80 Serial.print("green");
81 Serial.println(green);
82
83 if(red > blue && red > green){
84 Serial.println("red is in front");
85 return 1;
86 }
87
88 if(blue > green && blue > red){
89 Serial.println("blue is in front");
90 return 2;
91 }
92
93 if(green > blue && green > red){
94 Serial.println("green is in front");
95 return 3;
96 }
97
98
99 }
100
101
102
103 /*
104 This method will return the pulseIn reading of the selected color.
105
106 Since frequency is proportional to light intensity of the selected color filter,
107 the smaller pulseIn is, the more light there is of the selected color filter.
108
109 It will turn on the sensor at the start taosMode(1), and it will power off the sensor at the end taosMode(0)
110
111
112 color: 0=white, 1=red, 2=blue, 3=green
113
114 if LEDstate is 0, LED will be off. 1 and the LED will be on.
115
116 taosOutPin is the ouput of the TCS3200. If you have multiple TCS3200, all wires can be combined except the out pin
117 */
118
119 double colorRead(int taosOutPin, int color, boolean LEDstate){
120
121 //make sure that the pin is set to input
122 pinMode(taosOutPin, INPUT);
123
124 //turn on sensor with highest frequency setting
125 taosMode(1);
126
127 //delay to let the sensor sit before taking a reading. Should be very small with this sensor
128 int sensorDelay = 1;
129
130 //set the pins to select the color
131 if(color == 0){//white
132 digitalWrite(S3, LOW); //S3
133 digitalWrite(S2, HIGH); //S2
134 // Serial.print(" w");
135 }else if(color == 1){//red
136 digitalWrite(S3, LOW); //S3
137 digitalWrite(S2, LOW); //S2
138 // Serial.print(" r");
139 }else if(color == 2){//blue
140 digitalWrite(S3, HIGH); //S3
141 digitalWrite(S2, LOW); //S2
142 // Serial.print(" b");
143 }else if(color == 3){//green
144 digitalWrite(S3, HIGH); //S3
145 digitalWrite(S2, HIGH); //S2
146 // Serial.print(" g");
147 }
148
149 double readPulse;
150
151 if(LEDstate == 0){
152 digitalWrite(LED, LOW);
153 }
154
155 if(LEDstate == 1){
156 digitalWrite(LED, HIGH);
157 }
158
159 delay(sensorDelay);
160
161 readPulse = pulseIn(taosOutPin, LOW, 80000);
162
163 //if the pulseIn times out, it returns 0 and that throws off numbers. just cap it at 80k if it happens
164 if(readPulse < .1){
165 readPulse = 80000;
166 }
167
168 //turn off color sensor and white LED to save power
169 taosMode(0);
170
171 return readPulse;
172 }
173
174
175 //setting mode to zero will put taos into low power mode. taosMode(0);
176 void taosMode(int mode){
177
178 if(mode == 0){
179 //power OFF
180 digitalWrite(LED, LOW);
181 digitalWrite(S0, LOW); //S0
182 digitalWrite(S1, LOW); //S1
183 // Serial.println("mOFFm");
184 }else if(mode == 1){
185 //this will put in 1:1
186 digitalWrite(S0, HIGH); //S0
187 digitalWrite(S1, HIGH); //S1
188 // Serial.println("m1:1m");
189 }else if(mode == 2){
190 //this will put in 1:5
191 digitalWrite(S0, HIGH); //S0
192 digitalWrite(S1, LOW); //S1
193 //Serial.println("m1:5m");
194 }else if(mode == 3){
195 //this will put in 1:50
196 digitalWrite(S0, LOW); //S0
197 digitalWrite(S1, HIGH); //S1
198 //Serial.println("m1:50m");
199 }
200 return;
201 }
202
203
204 void TCS3200setup(){
205 //initialize pins
206 pinMode(LED,OUTPUT); //LED pinD
207 //color mode selection
208 pinMode(S2,OUTPUT); //S2 pinE
209 pinMode(S3,OUTPUT); //s3 pinF
210
211 //color response pin (only actual input from taos)
212 //pinMode(out, INPUT); //out pinC
213
214 //communication freq output divider
215 pinMode(S0,OUTPUT); //S0 pinB
216 pinMode(S1,OUTPUT); //S1 pinA
217
218 return;
219 }
220
221
222 